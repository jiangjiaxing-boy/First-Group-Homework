using System.Collections.Generic;
using System.Text;
using System.Runtime.InteropServices;
using System.Diagnostics;
using System.Drawing;
using System.Windows.Forms;
namespace hust.摄像头监控程序
{
    /// <summary>
    /// 截取屏幕图片
    /// </summary>
    public class CaptureScreenClass
    {
        [System.Runtime.InteropServices.DllImportAttribute("gdi32.dll")]
        private static extern bool BitBlt(
         IntPtr hdcDest, //目标设备的句柄
         int nXDest, // 目标对象的左上角的X坐标
         int nYDest, // 目标对象的左上角的Y坐标
         int nWidth, // 目标对象的矩形的宽度
         int nHeight, // 目标对象的矩形的长度
         IntPtr hdcSrc, // 源设备的句柄
         int nXSrc, // 源对象的左上角的X坐标
         int nYSrc, // 源对象的左上角的X坐标
         System.Int32 dwRop // 光栅的操作值
         );
        [System.Runtime.InteropServices.DllImportAttribute("gdi32.dll")]
        private static extern IntPtr CreateDC(
         string lpszDriver, // 驱动名称
         string lpszDevice, // 设备名称
         string lpszOutput, // 无用，可以设定位"NULL"
         IntPtr lpInitData // 任意的打印机数据
         );

        /// <summary>
        /// 截取屏幕上指定位置的图片
        /// </summary>
        /// <param name="point01">图片左上角的像素值</param>
        /// <param name="point02">图片右上角的像素值</param>
        /// <param name="full">是否全屏，如果为true则前面设置的point01和point02无效。</param>
        /// <returns></returns>
        
        public static Bitmap GetScreenImage(IntPtr dc1,Point point01, Point point02, bool full)
        {
            //创建显示器的DC
            //IntPtr dc1 = CreateDC("DISPLAY", null, null, (IntPtr)null);


            IntPtr dc33 = CreateDC("DISPLAY", null, null, dc1);
            //由一个指定设备的句柄创建一个新的Graphics对象
            Graphics g1 = Graphics.FromHdc(dc33);
            Bitmap MyImage;
            int width, height;
            if (full)
            {
                width = Screen.PrimaryScreen.Bounds.Width;
                height = Screen.PrimaryScreen.Bounds.Height;
            }
            else
            {
                width = point02.X - point01.X;
                height = point02.Y - point01.Y;
            }

            //根据指定的宽度和高度创建一个与之相同大小的Bitmap对象
            MyImage = new Bitmap(width, height, g1);

            //获得屏幕的句柄
            Graphics g2 = Graphics.FromImage(MyImage);
            //获得位图的句柄
            IntPtr dc3 = g1.GetHdc();
            //把当前屏幕捕获到位图对象中
            IntPtr dc2 = g2.GetHdc();
            //把当前屏幕拷贝到位图中
            BitBlt(dc2, 0, 0, width, height, dc3, point01.X, point01.Y, 13369376);
            //释放屏幕句柄
            g1.ReleaseHdc(dc3);
            //释放位图句柄
            g2.ReleaseHdc(dc2);
            return MyImage;
        }
    }
}